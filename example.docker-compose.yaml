# MIT License

# Copyright (c) 2024 DataStax, Inc.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# **THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.**

networks:
  langflow-network:
    driver: bridge

services:
  # The Postgres container provides 
  postgres:
    image: postgres:16-alpine3.20
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: main
    volumes:
      # Mounting local directory pgdata facilitates restarts and container deletion
      - ./pgdata:/var/lib/postgresql/data
      - ./postgres-user.sh:/postgres-user.sh
    networks:
      - langflow-network
    ports:
      - "5432:5432"

  # Use pgadmin if you need an easy-to-use Postgres UI
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - ./pgadmin-data:/var/lib/pgadmin
  #     - ./pgadmin-config_local.py:/etc/pgadmin/config_local.py
  #   networks:
  #     - langflow-network
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "8054:80"

  # Node server configuration
  # node:
  #   image: node:22-alpine3.20
  #   container_name: node
  #   volumes:
  #     - ./node_app:/usr/src/app
  #   working_dir: /usr/src/app
  #   command: ["npm", "run", "dev"]
  #   expose:
  #     - "3000"
  #   networks:
  #     - langflow-network
  #   environment:
  #     - MINIO_ENDPOINT=${MINIO_ENDPOINT}
  #     - MINIO_PORT=${MINIO_PORT}
  #     - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
  #     - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
  #     - MINIO_BUCKET=${MINIO_BUCKET}

  # Use MinIO if you want an S3-compatible object storage service
  # minio:
  #   image: minio/minio
  #   container_name: minio
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #   command: server /data --console-address ":9001"
  #   volumes:
  #     - ./minio-data:/data
  #   networks:
  #     - langflow-network
  #   expose:
  #     - "9000"       # API service
  #   ports:
  #     - "9001:9001"  # MinIO console

  # Nginx provides a common entry point and routing mechanism 
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx_logs:/var/log/nginx
    ports:
      - "7860:7860"  # Langflow 
#      - "3000:3000"  # Node
    networks:
      - langflow-network
    #depends_on:


